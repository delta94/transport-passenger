create or replace FUNCTION INSERT_LOCATION(ID1 IN LOCATIONS.ID%TYPE, NAME1 IN LOCATIONS.NAME%TYPE, LATITUDE1 IN LOCATIONS.LATITUDE%TYPE
, LONGITUDE1 IN LOCATIONS.LONGITUDE%TYPE,ADDRESS1 IN LOCATIONS.ADDRESS%TYPE, TEL1 IN LOCATIONS.TEL%TYPE, OPEN_TIME1 IN LOCATIONS.OPEN_TIME%TYPE, CLOSE_TIME1 IN LOCATIONS.CLOSE_TIME%TYPE,  DISTRICT_ID1 
IN LOCATIONS.DISTRICT_ID%TYPE,TYPE1 IN LOCATIONS.TYPE%TYPE,CREATED_AT1 IN TIMESTAMP with time zone, UPDATED_AT1 IN TIMESTAMP with time zone) 
RETURNS INTEGER 
AS $$
DECLARE
    ROW_COUNT INTEGER := 0;
	v_result varchar(250);
BEGIN
    SELECT COUNT(*) INTO ROW_COUNT FROM LOCATIONS WHERE ID = ID1;
    IF ROW_COUNT > 0 THEN
        select show_message('Duplicate of ID !') into v_result;
		RETURN 1;
    ELSE
        SELECT COUNT(*) INTO ROW_COUNT FROM DISTRICTS WHERE ID = DISTRICT_ID1;
        IF ROW_COUNT = 0 THEN
			select show_message('DISTRICT_ID DOES NOT EXIST !') into v_result;
            RETURN 2;
        ELSE
            INSERT INTO LOCATIONS VALUES(ID1,NAME1,LATITUDE1,LONGITUDE1,ADDRESS1,TEL1,OPEN_TIME1,CLOSE_TIME1,DISTRICT_ID1,TYPE1,CREATED_AT1,UPDATED_AT1);
           	select show_message('Inserting LOCATIONS is successful !') into v_result;
        END IF;
    END IF;
    RETURN 0;
END ;
$$ language plpgsql;