create or replace FUNCTION INSERT_TRIP_DAILY(ID1 IN TRIP_DAILIES.ID%TYPE , NAME1 IN TRIP_DAILIES.NAME%TYPE, DEPART_STATION_ID1 IN TRIP_DAILIES.DEPART_STATION_ID%TYPE,ARRIVE_STATION_ID1 IN 
TRIP_DAILIES.ARRIVE_STATION_ID%TYPE , DEPART_TIME1 IN TRIP_DAILIES.DEPART_TIME%TYPE,DURATION1 IN TRIP_DAILIES.DURATION%TYPE, PRICE1 IN TRIP_DAILIES.PRICE%TYPE, DISTANCE1 IN TRIP_DAILIES.DISTANCE%TYPE, HOTLINE1 IN TRIP_DAILIES.HOTLINE%TYPE
, BUS_TYPE_ID1 IN TRIP_DAILIES.BUS_TYPE_ID%TYPE,CREATED_AT1 IN TIMESTAMP with time zone, UPDATED_AT1 IN TIMESTAMP with time zone)
RETURNS INTEGER 
AS $$
DECLARE
    ROW_COUNT INTEGER := 0;
	v_result varchar(250);
BEGIN
    SELECT COUNT(*) INTO ROW_COUNT FROM TRIP_DAILIES WHERE ID = ID1;
    IF ROW_COUNT > 0 THEN
		select show_message('Duplicate of ID !') into v_result;
        RETURN 1;
    ELSE
        SELECT COUNT(*) INTO ROW_COUNT FROM BUS_STATIONS WHERE ID = DEPART_STATION_ID1;
        IF ROW_COUNT = 0 THEN
			select show_message('DEPART_STATION_ID DOES NOT EXIST !') into v_result;
            RETURN 2;
        END IF;
        
        SELECT COUNT(*) INTO ROW_COUNT FROM BUS_STATIONS WHERE ID = ARRIVE_STATION_ID1;
        IF ROW_COUNT = 0 THEN
			select show_message('ARRIVE_STATION_ID DOES NOT EXIST !') into v_result;
            RETURN 3;
        END IF;
        
        SELECT COUNT(*) INTO ROW_COUNT FROM BUS_TYPES WHERE ID = BUS_TYPE_ID1;
        IF ROW_COUNT = 0 THEN
			select show_message('BUS_TYPE_ID DOES NOT EXIST !') into v_result;
            RETURN 4;
        END IF;
        
        INSERT INTO TRIP_DAILIES VALUES(ID1,NAME1,DEPART_STATION_ID1,ARRIVE_STATION_ID1,DEPART_TIME1,ARRIVE_TIME1,PRICE1,DISTANCE1,HOTLINE1,
        BUS_TYPE_ID1,CREATED_AT1,UPDATED_AT1);
        select show_message('Inserting TRIP_DAILIES is successful !') into v_result;
        
    END IF;
    RETURN 0;
END ;
$$ language plpgsql;