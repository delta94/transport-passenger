create or replace FUNCTION UPDATE_DEPARTMENT(ID1 IN  DEPARTMENTS.ID%TYPE, TYPE1 IN  DEPARTMENTS.TYPE%TYPE, NAME1 IN  DEPARTMENTS.NAME%TYPE, MANAGER_ID1 IN 
 DEPARTMENTS.MANAGER_ID%TYPE, OFFICE_ID1 IN  DEPARTMENTS.OFFICE_ID%TYPE) 
RETURNS INTEGER 
AS $$
DECLARE
     ROW_COUNT INTEGER := 0;
     ROW_DEPARTMENT DEPARTMENTS%ROWTYPE;
	 v_result varchar(250);
BEGIN
    SELECT COUNT(*) INTO ROW_COUNT FROM DEPARTMENTS WHERE ID = ID1;
    IF ROW_COUNT = 0 THEN
		select show_message('ID DOES NOT EXIST !') into v_result;
        RETURN 1;
    ELSE
        SELECT * INTO ROW_DEPARTMENT FROM DEPARTMENTS WHERE ID = ID1;
        
        IF TYPE1 IS NULL THEN
            TYPE1 := ROW_DEPARTMENT.TYPE;
        END IF;
        
        IF NAME1 IS NULL THEN
            NAME1 := ROW_DEPARTMENT.NAME;
        END IF;
        
        IF MANAGER_ID1 IS NULL THEN
            MANAGER_ID1 := ROW_DEPARTMENT.MANAGER_ID;
        ELSE
            SELECT COUNT(*) INTO ROW_COUNT FROM MANAGERS WHERE ID = MANAGER_ID1;
            IF ROW_COUNT = 0 THEN
				select show_message('MANAGER_ID DOES NOT EXIST !') into v_result;
                RETURN 2;
            END IF;
        END IF;
        
        IF OFFICE_ID1 IS NULL THEN
            OFFICE_ID1 := ROW_DEPARTMENT.OFFICE_ID;
        ELSE
            SELECT COUNT(*) INTO ROW_COUNT FROM OFFICES WHERE ID = OFFICE_ID1;
            IF ROW_COUNT = 0 THEN
				select show_message('OFFICE_ID DOES NOT EXIST !') into v_result;
                RETURN 3;
            END IF;
        END IF;
        UPDATE DEPARTMENTS SET TYPE = TYPE1, NAME = NAME1, MANAGER_ID = MANAGER_ID1,OFFICE_ID = OFFICE_ID1, CREATED_AT = CREATED_AT, UPDATED_AT = CURRENT_TIMESTAMP 
		WHERE ID = ID1;
        select show_message('UPDATING DEPARTMENTS IS SUCCESSFUL !') into v_result;
    END IF;
    RETURN 0;
END ;
$$ language plpgsql;