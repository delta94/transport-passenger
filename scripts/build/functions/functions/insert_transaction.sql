create or replace FUNCTION INSERT_TRANSACTION(ID1 IN TRANSACTIONS.ID%TYPE, CODE1 IN TRANSACTIONS.CODE%TYPE, 
CUSTOMER_ID1 IN TRANSACTIONS.CUSTOMER_ID%TYPE,SELLER_ID1 IN TRANSACTIONS.SELLER_ID%TYPE,TOTAL_PRICE1 IN TRANSACTIONS.TOTAL_PRICE%TYPE, 
PAYMENT_METHOD1 IN TRANSACTIONS.PAYMENT_METHOD%TYPE, STATUS1 IN TRANSACTIONS.STATUS%TYPE,TIMESTAMP1 IN TRANSACTIONS.TIMESTAMP%TYPE,CREATED_AT1 IN TIMESTAMP with time zone, UPDATED_AT1 IN TIMESTAMP with time zone) 
RETURNS INTEGER 
AS $$
DECLARE
    ROW_COUNT INTEGER := 0;
	v_result varchar(250);
BEGIN
    SELECT COUNT(*) INTO ROW_COUNT FROM TRANSACTIONS WHERE ID = ID1;
    IF ROW_COUNT > 0 THEN
		select show_message('Duplicate of ID !') into v_result;
        RETURN 1;
    ELSE
        SELECT COUNT(*) INTO ROW_COUNT FROM CUSTOMERS WHERE ID = CUSTOMER_ID1;
        IF ROW_COUNT = 0 AND CUSTOMER_ID1 IS NOT NULL THEN
			select show_message('CUSTOMER_ID DOES NOT EXIST !') into v_result;
            RETURN 2;
        END IF;
        
        SELECT COUNT(*) INTO ROW_COUNT FROM SELLERS WHERE ID = SELLER_ID1;
        IF ROW_COUNT = 0 AND SELLER_ID1 IS NOT NULL THEN
			select show_message('SELLER_ID DOES NOT EXIST !') into v_result;
            RETURN 3;
        END IF;
        
       	INSERT INTO TRANSACTIONS VALUES(ID1,CODE1,CUSTOMER_ID1,SELLER_ID1,TOTAL_PRICE1,PAYMENT_METHOD1,STATUS1,TIMESTAMP1,CREATED_AT1,UPDATED_AT1);
        select show_message('Inserting TRANSACTIONS is successful !') into v_result;
        
    END IF;
    RETURN 0;
END;
$$ language plpgsql;